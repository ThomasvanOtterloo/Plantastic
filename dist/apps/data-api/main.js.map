{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Plantastic/./apps/data-api/src/app/api-response.interceptor.ts","webpack://Plantastic/./apps/data-api/src/app/app.module.ts","webpack://Plantastic/./apps/data-api/src/app/auth/auth.controller.ts","webpack://Plantastic/./apps/data-api/src/app/auth/auth.module.ts","webpack://Plantastic/./apps/data-api/src/app/auth/auth.service.ts","webpack://Plantastic/./apps/data-api/src/app/auth/identity.schema.ts","webpack://Plantastic/./apps/data-api/src/app/auth/token.decorator.ts","webpack://Plantastic/./apps/data-api/src/app/auth/token.middleware.ts","webpack://Plantastic/./apps/data-api/src/app/data.module.ts","webpack://Plantastic/./apps/data-api/src/app/meetup/meetup.controller.ts","webpack://Plantastic/./apps/data-api/src/app/meetup/meetup.schema.ts","webpack://Plantastic/./apps/data-api/src/app/meetup/meetup.service.ts","webpack://Plantastic/./apps/data-api/src/app/meetup/review.schema.ts","webpack://Plantastic/./apps/data-api/src/app/topic/topic.controller.ts","webpack://Plantastic/./apps/data-api/src/app/topic/topic.schema.ts","webpack://Plantastic/./apps/data-api/src/app/topic/topic.service.ts","webpack://Plantastic/./apps/data-api/src/app/user/user.controller.ts","webpack://Plantastic/./apps/data-api/src/app/user/user.schema.ts","webpack://Plantastic/./apps/data-api/src/app/user/user.service.ts","webpack://Plantastic/./libs/data/src/index.ts","webpack://Plantastic/./libs/data/src/lib/user.interface.ts","webpack://Plantastic/external commonjs \"@nestjs/common\"","webpack://Plantastic/external commonjs \"@nestjs/core\"","webpack://Plantastic/external commonjs \"@nestjs/mongoose\"","webpack://Plantastic/external commonjs \"bcrypt\"","webpack://Plantastic/external commonjs \"jsonwebtoken\"","webpack://Plantastic/external commonjs \"mongoose\"","webpack://Plantastic/external commonjs \"rxjs/operators\"","webpack://Plantastic/external commonjs \"tslib\"","webpack://Plantastic/external commonjs \"uuid\"","webpack://Plantastic/external commonjs \"validator/lib/isEmail\"","webpack://Plantastic/webpack/bootstrap","webpack://Plantastic/./apps/data-api/src/main.ts"],"sourcesContent":["import { ApiResponse } from '@find-a-buddy/data';\nimport { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiResponseInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<ApiResponse<unknown>> {\n    return next\n      .handle()\n      .pipe(\n        map(results => {\n            if (results) {\n                return {\n                    results,\n                    info: {\n                        version: '1.0',\n                        type: results instanceof Array ? 'list' : 'object',\n                        count: results instanceof Array ? results.length : 1,\n                    }\n                }\n            } else {\n                return {\n                    results: undefined,\n                    info: {\n                        version: '1.0',\n                        type: 'none',\n                        count: 0,\n                    }\n                }\n            }\n        }\n      ));\n  }\n}\n","import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\n\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AuthModule } from './auth/auth.module';\nimport { TokenMiddleware } from './auth/token.middleware';\nimport { DataModule } from './data.module';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(\n      // `mongodb+srv://${process.env.MONGO_USR}:${process.env.MONGO_PWD}@${process.env.MONGO_HOST}/${process.env.MONGO_DATABASE}?retryWrites=true&w=majority`\n      `mongodb://${process.env.MONGO_HOST}/${process.env.MONGO_DATABASE}`\n    ),\n    AuthModule,\n    DataModule,\n    RouterModule.register([\n      {\n        path: 'auth-api',\n        module: AuthModule,\n      },\n      {\n        path: 'data-api',\n        module: DataModule,\n      },\n    ]),\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(TokenMiddleware).forRoutes('data-api');\n  }\n}\n","import { Body, Controller, HttpException, HttpStatus, Post } from '@nestjs/common';\n\nimport { ResourceId, Token, UserCredentials, UserRegistration } from '@find-a-buddy/data';\n\nimport { AuthService } from './auth.service';\n\n@Controller()\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    @Post('register')\n    async register(@Body() credentials: UserRegistration): Promise<ResourceId> {\n        try {\n            await this.authService.registerUser(credentials.username, credentials.password, credentials.emailAddress);\n    \n            return {\n                id: await this.authService.createUser(credentials.username, credentials.emailAddress),\n            };\n        } catch (e) {\n            throw new HttpException('Username invalid', HttpStatus.BAD_REQUEST);\n        }\n    }\n\n    @Post('login')\n    async login(@Body() credentials: UserCredentials): Promise<Token> {\n        try {\n            return {\n                token: await this.authService.generateToken(credentials.username, credentials.password)\n            };\n        } catch (e) {\n            throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n        }\n    }\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AuthController } from './auth.controller';\n\nimport { Identity, IdentitySchema } from './identity.schema';\nimport { User, UserSchema } from '../user/user.schema';\nimport { AuthService } from './auth.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Identity.name, schema: IdentitySchema },\n      { name: User.name, schema: UserSchema }\n    ]),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}","import { Injectable } from '@nestjs/common';\n\nimport { JwtPayload, verify, sign } from 'jsonwebtoken';\nimport { hash, compare } from 'bcrypt';\n\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\nimport { Identity, IdentityDocument } from './identity.schema';\nimport { User, UserDocument } from '../user/user.schema';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        @InjectModel(Identity.name) private identityModel: Model<IdentityDocument>,\n        @InjectModel(User.name) private userModel: Model<UserDocument>\n    ) {}\n\n    async createUser(name: string, emailAddress: string): Promise<string> {\n        const user = new this.userModel({name, emailAddress});\n        await user.save();\n        return user.id;\n      }\n\n    async verifyToken(token: string): Promise<string | JwtPayload> {\n        return new Promise((resolve, reject) => {\n            verify(token, process.env.JWT_SECRET, (err, payload) => {\n                if (err) reject(err);\n                else resolve(payload);\n            })\n        })\n    }\n\n    async registerUser(username: string, password: string, emailAddress: string) {\n        const generatedHash = await hash(password, parseInt(process.env.SALT_ROUNDS, 10));\n\n        const identity = new this.identityModel({username, hash: generatedHash, emailAddress});\n\n        await identity.save();\n    }\n\n    async generateToken(username: string, password: string): Promise<string> {\n        const identity = await this.identityModel.findOne({username});\n\n        if (!identity || !(await compare(password, identity.hash))) throw new Error(\"user not authorized\");\n\n        const user = await this.userModel.findOne({name: username});\n\n        return new Promise((resolve, reject) => {\n            sign({username, id: user.id}, process.env.JWT_SECRET, (err: Error, token: string) => {\n                if (err) reject(err);\n                else resolve(token);\n            });\n        })\n    }\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport isEmail from 'validator/lib/isEmail';\n\nexport type IdentityDocument = Identity & Document;\n\n@Schema()\nexport class Identity {\n    @Prop({\n        required: true,\n        unique: true,\n    })\n    username: string;\n\n    @Prop({required: true})\n    hash: string;\n\n    @Prop({\n        required: true,\n        unique: true,\n        validate: {\n          validator: isEmail,\n          message: 'should be a valid email address',\n        }\n      })\n      emailAddress: string;\n}\n\nexport const IdentitySchema = SchemaFactory.createForClass(Identity);\n","import { createParamDecorator, ExecutionContext } from '@nestjs/common';\n\nimport { Id } from '@find-a-buddy/data';\n\nexport interface Token {\n  username: Id,\n  id: string,\n}\n\nexport const InjectToken = createParamDecorator(\n  (_data: unknown, ctx: ExecutionContext) => {\n    const response = ctx.switchToHttp().getResponse();\n    return response.locals.token;\n  },\n);","import { HttpException, HttpStatus, Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class TokenMiddleware implements NestMiddleware {\n  constructor(private authService: AuthService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const authHeader = req.header('authorization');\n\n    if (!authHeader) {\n      throw new HttpException('No authorization header', HttpStatus.UNAUTHORIZED);\n    }\n\n    try {\n      const token = await this.authService.verifyToken(authHeader);\n      \n      res.locals.token = token;\n    } catch (e) {\n      throw new HttpException('Token invalid', HttpStatus.UNAUTHORIZED);\n    }\n\n    next();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { TopicController } from './topic/topic.controller';\nimport { MeetupService } from './meetup/meetup.service';\nimport { TopicService } from './topic/topic.service';\nimport { UserService } from './user/user.service';\n\nimport { User, UserSchema } from './user/user.schema';\nimport { Topic, TopicSchema } from './topic/topic.schema';\nimport { Meetup, MeetupSchema } from './meetup/meetup.schema';\nimport { UserController } from './user/user.controller';\nimport { MeetupController } from './meetup/meetup.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Topic.name, schema: TopicSchema },\n      { name: Meetup.name, schema: MeetupSchema }]),\n  ],\n  controllers: [\n    MeetupController,\n    TopicController,\n    UserController,\n  ],\n  providers: [\n    UserService,\n    TopicService,\n    MeetupService,\n  ],\n})\nexport class DataModule {}\n","import { Body, Controller, Get, HttpException, HttpStatus, Param, Post } from '@nestjs/common';\n\nimport { MeetupService } from './meetup.service';\n\nimport { Meetup, MeetupCreation, ResourceId, Review } from '@find-a-buddy/data';\nimport { InjectToken, Token } from '../auth/token.decorator';\n\n@Controller('meetup')\nexport class MeetupController {\n  constructor(private readonly meetupService: MeetupService) {}\n\n  @Get('invite')\n  async getInvites(@InjectToken() token: Token): Promise<Meetup[]> {\n    return this.meetupService.getInvites(token.id);\n  }\n\n  @Get()\n  async getMeetups(@InjectToken() token: Token): Promise<Meetup[]> {\n    return this.meetupService.getAll(token.id);\n  }\n\n  @Get(':id')\n  async getMeetup(@InjectToken() token: Token, @Param('id') id: string): Promise<Meetup> {\n    return this.meetupService.getOne(token.id, id);\n  }\n\n  @Post()\n  async create(@InjectToken() token: Token, @Body() meetup: MeetupCreation): Promise<ResourceId> {\n    try {\n      return await this.meetupService.create(meetup.topic, meetup.datetime, meetup.tutorId, token.id);\n    } catch (e) {\n      throw new HttpException('invalid meetup', HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Post('/:id/accept')\n  async acceptInvite(@InjectToken() token: Token, @Param('id') id: string) {\n    try{\n      await this.meetupService.acceptInvite(token.id, id);\n    } catch (e) {\n      throw new HttpException('invalid invite accept', HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Post('/:id/review')\n  async postReview(@InjectToken() token: Token, @Param('id') id: string, @Body() review: Review) {\n    try {\n      await this.meetupService.postReview(token.id, id, review.text, review.rating);\n    } catch (e) {\n      throw new HttpException('invalid review', HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Schema as MongooseSchema } from 'mongoose';\nimport { v4 as uuid } from 'uuid';\n\nimport { Review, ReviewSchema } from './review.schema';\nimport { User } from '../user/user.schema';\nimport { UserIdentity } from '@find-a-buddy/data';\n\nexport type MeetupDocument = Meetup & Document;\n\n@Schema()\nexport class Meetup {\n  @Prop({default: uuid})\n  id: string;\n\n  // we don't use hooks to ensure the topic exists, as nestjs does not play nice\n  // https://github.com/nestjs/mongoose/issues/7\n  @Prop({required: true})\n  topic: string;\n\n  @Prop({required: true})\n  datetime: Date;\n\n  @Prop({type: ReviewSchema})\n  review: Review;\n\n  @Prop({default: false})\n  accepted: boolean;\n\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    // cannot use User.name here, as it leads to a circular dependency\n    ref: 'User',\n  })\n  tutorRef: User;\n\n  @Prop({required: true, type: {id: String, name: String}})\n  tutor: UserIdentity;\n\n  @Prop({\n    required: true,\n    type: MongooseSchema.Types.ObjectId,\n    // cannot use User.name here, as it leads to a circular dependency\n    ref: 'User',\n  })\n  pupilRef: User;\n\n  @Prop({required: true, type: {id: String, name: String}})\n  pupil: UserIdentity;\n}\n\nexport const MeetupSchema = SchemaFactory.createForClass(Meetup);\n","import { Injectable } from '@nestjs/common';\n\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\nimport { Meetup, ResourceId } from '@find-a-buddy/data';\nimport { Meetup as MeetupModel, MeetupDocument } from './meetup.schema';\nimport { User, UserDocument } from '../user/user.schema';\nimport { TopicService } from '../topic/topic.service';\n\n@Injectable()\nexport class MeetupService {\n  constructor(\n    @InjectModel(MeetupModel.name) private meetupModel: Model<MeetupDocument>,\n    @InjectModel(User.name) private userModel: Model<UserDocument>,\n    private topicService: TopicService,\n  ) {}\n\n  async getInvites(userId: string): Promise<Meetup[]> {\n    const user = await this.userModel.findOne({id: userId});\n    \n    if (user == null) return [];\n\n    return this.meetupModel\n      .find({tutorRef: user._id, accepted: false}, {_id: 0, __v: 0, tutorRef: 0, pupilRef: 0, 'tutor._id': 0, 'pupil._id': 0});\n  }\n\n  async create(topic: string, datetime: Date, tutorUserId: string, pupilUserId: string): Promise<ResourceId> {\n    // await this.topicService.ensureExists(topic);\n\n    const tutor = await this.userModel.findOne({id: tutorUserId});\n    const pupil = await this.userModel.findOne({id: pupilUserId});\n\n    if (!tutor || !pupil) {\n      throw new Error('user not found');\n    }\n\n    if (!tutor.tutorTopics.find(t => t == topic) || !pupil.pupilTopics.find(t => t == topic)) {\n      throw new Error('invalid meetup');\n    }\n\n    const meetup = new this.meetupModel({\n      datetime,\n      topic,\n      tutorRef: tutor._id,\n      pupilRef: pupil._id,\n      tutor: {id: tutor.id, name: tutor.name},\n      pupil: {id: pupil.id, name: pupil.name},\n    });\n\n    tutor.meetups.push(meetup);\n    pupil.meetups.push(meetup);\n\n    await Promise.all([meetup.save(), tutor.save(), pupil.save()]);\n\n    return {id: meetup.id};\n  }\n\n  async getAll(userId: string): Promise<Meetup[]> {\n    const user = await this.userModel.findOne({id: userId});\n    \n    if (user == null) return [];\n\n    return this.meetupModel\n      .find({$or: [{tutorRef: user._id, accepted: true}, {pupilRef: user._id}]}, \n        {_id: 0, __v: 0, \"review._id\": 0, \"review.__v\": 0, tutorRef: 0, pupilRef: 0, 'tutor._id': 0, 'pupil._id': 0});\n      // .populate('tutorRef', {id: 1, name: 1, _id: 0})\n      // .populate('pupilRef', {id: 1, name: 1, _id: 0});\n  }\n\n  async getOne(userId: string, meetupId: string): Promise<Meetup | null> {\n    const user = await this.userModel.findOne({id: userId});\n\n    if (user == null) return null;\n\n    return this.meetupModel\n      .findOne({$and: [{id: meetupId}, {$or: [{tutorRef: user._id}, {pupilRef: user._id}]}]}, \n        {_id: 0, __v: 0, \"review._id\": 0, \"review.__v\": 0, tutorRef: 0, pupilRef: 0, 'tutor._id': 0, 'pupil._id': 0});\n  }\n\n  async acceptInvite(userId: string, meetupId: string) {\n    const user = await this.userModel.findOne({id: userId});\n    const result = await this.meetupModel.updateOne({id: meetupId, tutorRef: user._id}, {accepted: true});\n    \n    if (result.modifiedCount == 0) {\n      throw new Error('not accepted');\n    }\n  }\n\n  async postReview(userId: string, meetupId: string, text: string, rating: number) {\n    const meetup = await this.meetupModel.findOne({id: meetupId}).populate('pupilRef');\n\n    if (meetup.pupilRef.id != userId) throw new Error('user not authorized');\n\n    if (meetup.review) throw new Error('already reviewed');\n\n    meetup.review = {text, rating};\n\n    await meetup.save();\n  }\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ReviewDocument = Review & Document;\n\n@Schema()\nexport class Review {\n  @Prop({required: false})\n  text: string;\n\n  @Prop({\n    required: true, \n    validate: {\n      validator: (v: number) => Number.isInteger(v) && 1 <= v && v <= 5,\n      message: 'rating should be 1, 2, 3, 4 or 5',\n    }\n  })\n  rating: number;\n}\n\nexport const ReviewSchema = SchemaFactory.createForClass(Review);\n","import { Body, Controller, Delete, Get, Post } from '@nestjs/common';\n\nimport { TopicService } from './topic.service';\n\nimport { Topic, TopicUpdate } from '@find-a-buddy/data';\nimport { InjectToken, Token } from '../auth/token.decorator';\n\n@Controller('topic')\nexport class TopicController {\n    constructor(private readonly topicService: TopicService) {}\n\n    @Get()\n    async getAll(): Promise<Topic[]> {\n        return this.topicService.getAll();\n    }\n\n    @Post()\n    async addTopic(@InjectToken() token: Token, @Body() topicUpdate: TopicUpdate) {\n        await this.topicService.addTopic(token.id, topicUpdate.title, topicUpdate.role)\n    }\n\n    @Delete()\n    async removeTopic(@InjectToken() token: Token, @Body() topicUpdate: TopicUpdate) {\n        await this.topicService.removeTopic(token.id, topicUpdate.title, topicUpdate.role);\n    }\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { v4 as uuid } from 'uuid';\n\nexport type TopicDocument = Topic & Document;\n\n@Schema()\nexport class Topic {\n  @Prop({default: uuid, index: true})\n  id: string;\n\n  @Prop({required: true, unique: true})\n  title: string;\n}\n\nexport const TopicSchema = SchemaFactory.createForClass(Topic);\n","import { Injectable } from '@nestjs/common';\n\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\nimport { Topic, TopicDocument } from '../topic/topic.schema';\nimport { User, UserDocument } from '../user/user.schema';\nimport { Role } from '@find-a-buddy/data';\n\n@Injectable()\nexport class TopicService {\n  constructor(\n    @InjectModel(Topic.name) private topicModel: Model<TopicDocument>,\n    @InjectModel(User.name) private userModel: Model<UserDocument>\n  ) {}\n\n  async ensureExists(topic: string) {\n    try {\n      await this.topicModel.create({title: topic});\n    // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  async getAll(): Promise<Topic[]> {\n    return this.topicModel.find({}, {_id: 0, __v: 0});\n  }\n\n  async addTopic(userId: string, topic: string, role: Role) {\n    await this.ensureExists(topic);\n\n    if (role == 'tutor') {\n      await this.userModel.updateOne({id: userId}, {$addToSet: {tutorTopics: topic}});\n    } else {\n      await this.userModel.updateOne({id: userId}, {$addToSet: {pupilTopics: topic}});\n    }\n  }\n\n  async removeTopic(userId: string, topic: string, role: Role) {\n    if (role == 'tutor') {\n      await this.userModel.updateOne({id: userId}, {$pull: {tutorTopics: topic}});\n    } else {\n      await this.userModel.updateOne({id: userId}, {$pull: {pupilTopics: topic}});\n    }\n  }\n}\n","import { Controller, Get, Param } from '@nestjs/common';\n\nimport { UserService } from './user.service';\n\nimport { UserInfo, User } from '@find-a-buddy/data';\nimport { InjectToken, Token } from '../auth/token.decorator';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get()\n  async getAll(): Promise<UserInfo[]> {\n    return this.userService.getAll();\n  }\n\n  // this method should precede the general getOne method, otherwise it never matches\n  @Get('self')\n  async getSelf(@InjectToken() token: Token): Promise<User> {\n    const result = await this.userService.getOne(token.id);\n    return result;\n  }\n\n  @Get(':id')\n  async getOne(@Param('id') id: string): Promise<User> {\n    return this.userService.getOne(id);\n  }\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Schema as MongooseSchema } from 'mongoose';\nimport { v4 as uuid } from 'uuid';\nimport isEmail from 'validator/lib/isEmail';\n\nimport { Meetup } from '../meetup/meetup.schema';\n\nexport type UserDocument = User & Document;\n\n@Schema()\nexport class User {\n  @Prop({default: uuid, index: true})\n  id: string;\n\n  @Prop({\n    required: true,\n    unique: true,\n  })\n  name: string;\n\n  @Prop({\n    required: true,\n    default: [],\n  })\n  roles: string[];\n\n  @Prop({\n    required: true,\n    default: true,\n  })\n  isActive: boolean;\n\n  @Prop({\n    required: true,\n    validate: {\n      validator: isEmail,\n      message: 'should be a valid email address',\n    }\n  })\n  emailAddress: string;\n\n  // we don't use hooks to ensure the topics exist, as nestjs does not play nice\n  // https://github.com/nestjs/mongoose/issues/7\n  @Prop({default: []})\n  tutorTopics: string[];\n\n  @Prop({default: []})\n  pupilTopics: string[];\n\n  @Prop({\n    default: [],\n    type: [MongooseSchema.Types.ObjectId],\n    // cannot use Meetup.name here, as it leads to a circular dependency\n    ref: 'Meetup',\n  })\n  meetups: Meetup[];\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n","import { Injectable } from '@nestjs/common';\n\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\nimport { User as UserModel, UserDocument } from './user.schema';\nimport { Meetup, MeetupDocument } from '../meetup/meetup.schema';\n\nimport { User, UserInfo } from '@find-a-buddy/data';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(UserModel.name) private userModel: Model<UserDocument>,\n    @InjectModel(Meetup.name) private meetupModel: Model<MeetupDocument>) {}\n\n  async getAll(): Promise<UserInfo[]> {\n    return this.userModel.aggregate([\n      {$lookup: {\n        from: 'meetups',\n        localField: 'meetups',\n        foreignField: '_id',\n        as: 'meetups',\n      }},\n      {$addFields: {\n        reviews: {$let: {\n          vars: {user: '$_id'},\n          in: {$map: {\n            input: {$filter: {\n              input: '$meetups', \n              as: 'meetup',\n              cond: {$and: [{$eq: ['$$meetup.tutorRef', '$$user']}, {$gt: ['$$meetup.review', null]}]}\n            }},\n            as: 'meetup',\n            in: {\n              rating: '$$meetup.review.rating',\n            },\n          }},\n        }},\n      }},\n      {$addFields: {\n        rating: {$avg: '$reviews.rating'},\n      }},\n      {$project: {\n        _id: 0,\n        __v: 0,\n        meetups: 0,\n        reviews: 0,\n      }},\n    ]);\n  }\n\n  async getOne(userId: string): Promise<User | null> {\n    const users = await this.userModel.aggregate([\n      {$match: {\n        id: userId,\n      }},\n      {$lookup: {\n        from: 'meetups',\n        localField: 'meetups',\n        foreignField: '_id',\n        as: 'meetups',\n      }},\n      {$addFields: {\n        reviews: {$let: {\n          vars: {user: '$_id'},\n          in: {$map: {\n            input: {$filter: {\n              input: '$meetups', \n              as: 'meetup',\n              cond: {$and: [{$eq: ['$$meetup.tutorRef', '$$user']}, {$gt: ['$$meetup.review', null]}]}\n            }},\n            as: 'meetup',\n            in: {\n              rating: '$$meetup.review.rating',\n              id: '$$meetup.id',\n              topic: '$$meetup.topic',\n              datetime: '$$meetup.datetime',\n              text: '$$meetup.review.text',\n              tutor: '$$meetup.tutor',\n              pupil: '$$meetup.pupil',\n            },\n          }},\n        }},\n      }},\n      {$addFields: {\n        rating: {$avg: '$reviews.rating'},\n      }},\n      {$project: {\n        _id: 0,\n        __v: 0,\n        meetups: 0,\n        'reviews.tutor._id': 0,\n        'reviews.pupil._id': 0,\n      }},\n    ]);\n\n    return users[0];\n  }\n}\n","export * from './lib/id.type';\nexport * from './lib/roles';\nexport * from './lib/meetup.interface';\nexport * from './lib/review.interface';\nexport * from './lib/topic.interface';\nexport * from './lib/user.interface';\nexport * from './lib/api-response.interface';\nexport * from './lib/auth.interface';\n","import { Id } from './id.type'\nimport { Review } from './review.interface'\n\nexport interface UserIdentity extends UserLogin{\n    id: Id\n    name: string\n}\n\nexport interface UserInfo extends UserIdentity {\n    username: string | undefined\n    email: string\n    token: string\n\n}\n\nexport interface User extends UserInfo {\n    reviews: Review[]\n    wallet: number\n}\n\nexport interface UserLogin {\n    name: string\n    password: string\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"bcrypt\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");","module.exports = require(\"validator/lib/isEmail\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { ApiResponseInterceptor } from './app/api-response.interceptor';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  // const globalPrefix = 'data-api';\n  // app.setGlobalPrefix(globalPrefix);\n\n  app.useGlobalInterceptors(new ApiResponseInterceptor());\n\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  \n  Logger.log(\n    `🚀 Data API is running on: ${await app.getUrl()}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}