{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Plantastic/./apps/data-api/src/app/api-response.interceptor.ts","webpack://Plantastic/./apps/data-api/src/app/app.module.ts","webpack://Plantastic/./apps/data-api/src/app/auth/auth.controller.ts","webpack://Plantastic/./apps/data-api/src/app/auth/auth.module.ts","webpack://Plantastic/./apps/data-api/src/app/auth/auth.service.ts","webpack://Plantastic/./apps/data-api/src/app/auth/identity.schema.ts","webpack://Plantastic/./apps/data-api/src/app/auth/token.decorator.ts","webpack://Plantastic/./apps/data-api/src/app/auth/token.middleware.ts","webpack://Plantastic/./apps/data-api/src/app/data.module.ts","webpack://Plantastic/./apps/data-api/src/app/friend/friend.controller.ts","webpack://Plantastic/./apps/data-api/src/app/friend/friend.schema.ts","webpack://Plantastic/./apps/data-api/src/app/friend/friend.service.ts","webpack://Plantastic/./apps/data-api/src/app/order/order.controller.ts","webpack://Plantastic/./apps/data-api/src/app/order/order.schema.ts","webpack://Plantastic/./apps/data-api/src/app/order/order.service.ts","webpack://Plantastic/./apps/data-api/src/app/product/product.controller.ts","webpack://Plantastic/./apps/data-api/src/app/product/product.schema.ts","webpack://Plantastic/./apps/data-api/src/app/product/product.service.ts","webpack://Plantastic/./apps/data-api/src/app/review/review.controller.ts","webpack://Plantastic/./apps/data-api/src/app/review/review.schema.ts","webpack://Plantastic/./apps/data-api/src/app/review/review.service.ts","webpack://Plantastic/./apps/data-api/src/app/user/user.controller.ts","webpack://Plantastic/./apps/data-api/src/app/user/user.schema.ts","webpack://Plantastic/./apps/data-api/src/app/user/user.service.ts","webpack://Plantastic/./libs/data/src/index.ts","webpack://Plantastic/external commonjs \"@nestjs/common\"","webpack://Plantastic/external commonjs \"@nestjs/core\"","webpack://Plantastic/external commonjs \"@nestjs/mongoose\"","webpack://Plantastic/external commonjs \"bcrypt\"","webpack://Plantastic/external commonjs \"jsonwebtoken\"","webpack://Plantastic/external commonjs \"mongoose\"","webpack://Plantastic/external commonjs \"rxjs/operators\"","webpack://Plantastic/external commonjs \"tslib\"","webpack://Plantastic/external commonjs \"uuid\"","webpack://Plantastic/webpack/bootstrap","webpack://Plantastic/./apps/data-api/src/main.ts"],"sourcesContent":["import { ApiResponse } from '@find-a-buddy/data';\nimport { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiResponseInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<ApiResponse<unknown>> {\n    return next\n      .handle()\n      .pipe(\n        map(results => {\n            if (results) {\n                return {\n                    results,\n                    info: {\n                        version: '1.0',\n                        type: results instanceof Array ? 'list' : 'object',\n                        count: results instanceof Array ? results.length : 1,\n                    }\n                }\n            } else {\n                return {\n                    results: undefined,\n                    info: {\n                        version: '1.0',\n                        type: 'none',\n                        count: 0,\n                    }\n                }\n            }\n        }\n      ));\n  }\n}\n","import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\n\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AuthModule } from './auth/auth.module';\nimport { TokenMiddleware } from './auth/token.middleware';\nimport { DataModule } from './data.module';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(\n      // `mongodb+srv://${process.env.MONGO_USR}:${process.env.MONGO_PWD}@${process.env.MONGO_HOST}/${process.env.MONGO_DATABASE}?retryWrites=true&w=majority`\n      `mongodb://${process.env.MONGO_HOST}/${process.env.MONGO_DATABASE}`\n    ),\n    AuthModule,\n    DataModule,\n    RouterModule.register([\n      {\n        path: 'auth-api',\n        module: AuthModule,\n      },\n      {\n        path: 'data-api',\n        module: DataModule,\n      },\n    ]),\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(TokenMiddleware).forRoutes('data-api');\n  }\n}\n\n","import { Body, Controller, HttpException, HttpStatus, Post } from '@nestjs/common';\n\nimport {ResourceId, Token, UserInfo, UserRegistration} from '@find-a-buddy/data';\n\nimport { AuthService } from './auth.service';\n\n@Controller()\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    @Post('register')\n    async register(@Body() credentials: UserRegistration): Promise<ResourceId> {\n        console.log('register', credentials);\n        try {\n            await this.authService.registerUser(credentials.username, credentials.password);\n            console.log('register succeeded');\n            return {\n                id: await this.authService.createUser(credentials.username),\n            };\n        } catch (e) {\n            throw new HttpException('Username invalid' + e, HttpStatus.BAD_REQUEST);\n        }\n    }\n\n\n\n    @Post('login')\n    async login(@Body() credentials: UserRegistration): Promise<UserInfo> {\n        console.log('login inside controller', credentials);\n        try {\n            return  await this.authService.generateToken(credentials.username, credentials.password)\n        } catch (e) {\n            throw new HttpException('Invalid credentials:? ' + e, HttpStatus.UNAUTHORIZED);\n        }\n    }\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AuthController } from './auth.controller';\n\nimport { Identity, IdentitySchema } from './identity.schema';\nimport { User, UserSchema } from '../user/user.schema';\nimport { AuthService } from './auth.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Identity.name, schema: IdentitySchema },\n      { name: User.name, schema: UserSchema }\n    ]),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {\n\n}","import { Injectable } from '@nestjs/common';\n\nimport { JwtPayload, verify, sign } from 'jsonwebtoken';\nimport { hash, compare } from 'bcrypt';\n\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\nimport { Identity, IdentityDocument } from './identity.schema';\nimport { User, UserDocument } from '../user/user.schema';\nimport {UserInfo} from \"@find-a-buddy/data\";\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        @InjectModel(Identity.name) private identityModel: Model<IdentityDocument>,\n        @InjectModel(User.name) private userModel: Model<UserDocument>\n    ) {}\n\n    async createUser(username: string): Promise<string> {\n        const user = new this.userModel({username});\n        await user.save();\n        return user.id;\n      }\n\n    async verifyToken(token: string): Promise<string | JwtPayload> {\n        return new Promise((resolve, reject) => {\n            verify(token, process.env.JWT_SECRET, (err, payload) => {\n                if (err) reject(err);\n                else resolve(payload);\n            })\n        })\n    }\n\n    async registerUser(username: string, password: string) {\n        const generatedHash = await hash(password, parseInt(process.env.SALT_ROUNDS, 10));\n\n        const identity = new this.identityModel({username, hash: generatedHash});\n\n        console.log('registerUser', identity);\n\n        await identity.save();\n    }\n\n    async generateToken(username: string, password: string): Promise<UserInfo> {\n        const identity = await this.identityModel.findOne({username});\n\n        console.log('generateToken', identity);\n        if (!identity || !(await compare(password, identity.hash))) throw new Error(\"user not authorized\");\n\n        const user = await this.userModel.findOne({name: username});\n\n        return new Promise((resolve, reject) => {\n            sign({username, id: user.id}, process.env.JWT_SECRET, (err: Error, token: string) => {\n                if (err) reject(err);\n                else resolve({token: token, id: user.id, username: username, password: ''});\n            });\n        })\n    }\n}\n/*\n* {\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRob21hcyIsImlkIjoiYzY1MDYwYzUtNTE4NC00MzJiLWE1NWEtMGUwNjkyNmE1NDg2IiwiaWF0IjoxNjY5NzMwMjcyfQ.4HgW4vSfKvwDhsRAyf-QwioHfheEH9Ar9tD_b6WSAyc\",\"id\":\"c65060c5-5184-432b-a55a-0e06926a5486\",\"username\":\"thomas\",\"password\":\"\",\"name\":\"\"}\n* */","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type IdentityDocument = Identity & Document;\n\n@Schema()\nexport class Identity {\n    @Prop({\n        required: true,\n        unique: true,\n    })\n    username: string;\n\n    @Prop({required: true})\n    hash: string;\n\n}\n\nexport const IdentitySchema = SchemaFactory.createForClass(Identity);\n","import { createParamDecorator, ExecutionContext } from '@nestjs/common';\n\nimport { Id } from '@find-a-buddy/data';\n\nexport interface Token {\n  username: Id,\n  id: string,\n}\n\nexport const InjectToken = createParamDecorator(\n  (_data: unknown, ctx: ExecutionContext) => {\n    const response = ctx.switchToHttp().getResponse();\n    return response.locals.token;\n  },\n);","import { HttpException, HttpStatus, Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class TokenMiddleware implements NestMiddleware {\n  constructor(private authService: AuthService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const authHeader = req.header('authorization');\n\n    if (!authHeader) {\n      throw new HttpException('No authorization header', HttpStatus.UNAUTHORIZED);\n    }\n\n    try {\n      const token = await this.authService.verifyToken(authHeader);\n      \n      res.locals.token = token;\n    } catch (e) {\n      throw new HttpException('Token invalid', HttpStatus.UNAUTHORIZED);\n    }\n\n    next();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport {MongooseModule, Schema} from '@nestjs/mongoose';\n\n// import { TopicController } from './topic/topic.controller';\n// import { MeetupService } from './meetup/meetup.service';\n// import { TopicService } from './topic/topic.service';\nimport { ProductService} from \"./product/product.service\";\nimport { UserService } from './user/user.service';\n\nimport { User, UserSchema } from './user/user.schema';\n// import { Topic, TopicSchema } from './topic/topic.schema';\n// import { Meetup, MeetupSchema } from './meetup/meetup.schema';\nimport { Product, ProductSchema } from './product/product.schema';\nimport { UserController } from './user/user.controller';\nimport { ProductController } from './product/product.controller';\nimport {Review, ReviewSchema} from \"./review/review.schema\";\nimport {ReviewController} from \"./review/review.controller\";\nimport {ReviewService} from \"./review/review.service\";\nimport {OrderController} from \"./order/order.controller\";\nimport {OrderService} from \"./order/order.service\";\nimport {Order, OrderSchema} from \"./order/order.schema\";\nimport {Friend, FriendSchema} from \"./friend/friend.schema\";\nimport {FriendService} from \"./friend/friend.service\";\nimport {FriendController} from \"./friend/friend.controller\";\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Product.name, schema: ProductSchema },\n      { name: Review.name, schema: ReviewSchema },\n      { name: Order.name, schema:  OrderSchema },\n      { name: Friend.name, schema: FriendSchema}\n    ]),\n  ],\n  controllers: [\n    UserController,\n    ProductController,\n    ReviewController,\n    OrderController,\n    FriendController\n  ],\n  providers: [\n    UserService,\n    ProductService,\n    ReviewService,\n    OrderService,\n    FriendService\n  ],\n})\nexport class DataModule {}\n","import {Body, Controller, Delete, Get, HttpException, Param, Post} from '@nestjs/common';\nimport {Product, Review, User} from '@find-a-buddy/data';\nimport { InjectToken, Token } from '../auth/token.decorator';\nimport {FriendService} from \"./friend.service\";\nimport {Friend} from \"./friend.schema\";\n\n@Controller('friend')\nexport class FriendController {\n    constructor(private readonly friendService: FriendService) {}\n\n    @Post()\n    async addFriends(@InjectToken() token: Token, @Body() userId: Friend): Promise<Friend> {\n        try {\n            // console.log('friendId: ', userId.userId + '<> token.id: ' + token.id);\n            return this.friendService.addFriend(token.id , userId.userId);\n        }\n        catch (e) {\n            console.log('DIDNT WORK', e);\n            throw new HttpException('Error creating product >' + e, 500);\n        }\n\n    }\n\n    @Delete(':id')\n    async removeFriend(@InjectToken() token: Token, @Param('id') userId: string): Promise<Friend> {\n        try {\n            return this.friendService.removeFriend(token.id, userId);\n        }\n        catch (e) {\n            console.log('DIDNT WORK', e);\n            throw new HttpException('Error deleting friend >' + e, 500);\n        }\n    }\n\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Schema as MongooseSchema } from 'mongoose';\nimport { v4 as uuid } from 'uuid';\n\nexport type FriendDocument = Friend & Document;\n\n@Schema()\nexport class Friend {\n\n  @Prop({default: uuid, index: true})\n  id: string;\n\n  @Prop({\n    required: true,\n    unique: true,\n  })\n  userId: string;\n\n\n\n}\n\nexport const FriendSchema = SchemaFactory.createForClass(Friend);\n","import {Injectable} from '@nestjs/common';\n\nimport {Model} from 'mongoose';\nimport {InjectModel} from '@nestjs/mongoose';\n\nimport {User, UserDocument} from \"../user/user.schema\";\nimport {Friend, FriendDocument} from \"./friend.schema\";\n\n\n@Injectable()\nexport class FriendService {\n  constructor(\n    @InjectModel(User.name) private userModel: Model<UserDocument>,\n    @InjectModel(Friend.name) private friendModel: Model<FriendDocument>\n  ) {}\n\n    async addFriend(userId: string, friendId: string): Promise<Friend | null> {\n        const friend = await this.userModel.findOne({id: friendId});\n        await this.userModel.updateOne({id: userId}, {$addToSet: {friends: {friend}}});\n        return this.userModel.findOne({\n            id: userId,\n        });\n    }\n\n    async removeFriend(userId: string, friendId: string): Promise<Friend | null> {\n      await this.userModel.updateOne({id: userId}, {$pull: {friends: {id: friendId}}});\n      return this.userModel.findOne({\n        id: userId,\n      });\n    }\n}\n","\nimport {Body, Controller, Get, HttpException, Param, Post} from '@nestjs/common';\n\n\nimport {Product, Review, User} from '@find-a-buddy/data';\nimport { InjectToken, Token } from '../auth/token.decorator';\nimport {OrderService} from \"./order.service\";\nimport {Order} from \"./order.schema\";\n\n@Controller('order')\nexport class OrderController {\n    constructor(private readonly orderService: OrderService) {}\n\n    @Get('self')\n    async getAll(@InjectToken() token: Token,): Promise<Order[]> {\n        return await this.orderService.getAll(token.id);\n    }\n\n\n    @Post()\n    async create(@InjectToken() token: Token,  @Body() order: Order): Promise<Order> {\n        try {\n            return await this.orderService.create(order , token.id );\n        }\n        catch (e) {\n            console.log('error', e);\n            throw new HttpException('Error creating product >' + e, 500);\n        }\n    }\n\n\n\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Schema as MongooseSchema } from 'mongoose';\nimport { v4 as uuid } from 'uuid';\n\nexport type OrderDocument = Order & Document;\n\n@Schema()\nexport class Order {\n\n  @Prop({default: uuid, index: true})\n  id: string;\n\n  @Prop({\n    required: true,\n    unique: false,\n  })\n  productId: string;\n\n  @Prop({\n    required: true,\n    unique: false,\n  })\n  authorId: string;\n\n  @Prop({\n    required: true,\n    unique: false,\n  })\n  quantity: number;\n\n  @Prop()\n  total: number;\n\n  @Prop()\n  deliverDate: Date;\n\n\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n","import {Injectable} from '@nestjs/common';\n\nimport {Model} from 'mongoose';\nimport {InjectModel} from '@nestjs/mongoose';\n\nimport {User, UserDocument} from \"../user/user.schema\";\nimport {Product, ProductDocument} from \"../product/product.schema\";\nimport {Order, OrderDocument} from \"./order.schema\";\n\n\n@Injectable()\nexport class OrderService {\n  constructor(\n    @InjectModel(User.name) private userModel: Model<UserDocument>,\n    @InjectModel(Product.name) private productModel: Model<ProductDocument>,\n    @InjectModel(Order.name) private orderModel: Model<OrderDocument>\n  ) {}\n\n  async getAll(token : string): Promise<Order[]> {\n    return this.orderModel.aggregate([{\n        $match: {\n            authorId: token,\n      }},\n        {\n            $group: {\n                _id: '$_id',\n                id: {$first: '$id'},\n                productId: {$first: '$productId'},\n                authorId: {$first: '$authorId'},\n                quantity: {$first: '$quantity'},\n                total: {$first: '$total'},\n                deliveryDate: {$first: '$deliveryDate'},\n            }\n        }\n    ]);\n  }\n\n  async getOne(orderId: string): Promise<Order | null> {\n    const products = await this.orderModel.aggregate([{\n        $match: {\n            orderId: orderId,\n        }},\n        {\n            $group: {\n                _id: '$_id',\n                id: {$first: '$id'},\n                productId: {$first: '$productId'},\n                authorId: {$first: '$authorId'},\n                quantity: {$first: '$quantity'},\n                total: {$first: '$total'},\n                deliveryDate: {$first: '$deliveryDate'},\n            }\n        }\n    ]);\n    return products[0];\n  }\n\n  async create(order: Order, authorId: string): Promise<Order> {\n    const product = await this.productModel.findOne({ id: order.productId });\n    const author = await this.userModel.findOne({ id: authorId});\n\n    if (!author) {\n        console.log(author)\n        throw new Error('authorId not found');\n    }\n\n      if (!product) {\n          console.log(\"product: \" + product)\n          throw new Error('productId not found');\n      }\n\n\n    const newOrder = new this.orderModel({\n        productId: order.productId,\n        authorId: authorId,\n        quantity: order.quantity,\n        total: product.price * order.quantity,\n        deliverDate: new Date(),\n    });\n\n      author.orders.push(newOrder.id);\n\n    await Promise.all([author.save(), product.save(), newOrder.save()]);\n\n    return newOrder;\n  }\n}\n","\nimport {Body, Controller, Delete, Get, HttpException, Param, Patch, Post, Put} from '@nestjs/common';\n\n\nimport { Product, User } from '@find-a-buddy/data';\nimport { InjectToken, Token } from '../auth/token.decorator';\nimport {ProductService} from \"./product.service\";\nimport {HttpResponse} from \"@angular/common/http\";\n\n@Controller('product')\nexport class ProductController {\n    constructor(private readonly productService: ProductService) {}\n\n    @Get()\n    async getAll(): Promise<Product[]> {\n        return this.productService.getAll();\n    }\n\n\n\n    @Get(':id')\n    async getOne(@Param('id') id: string): Promise<Product> {\n        return this.productService.getOne(id);\n    }\n\n\n    @Post()\n    async create(@InjectToken() token: Token,  @Body() product: Product): Promise<Product> {\n        if (product.image === '') {\n            product.image = 'https://static.vecteezy.com/system/resources/previews/002/425/076/non_2x/plant-leaves-in-a-pot-beautiful-green-houseplant-isolated-simple-trendy-flat-style-for-interior-garden-decoration-design-free-vector.jpg'\n        }\n        try {\n            return await this.productService.create(product, token.id);\n        }\n        catch (e) {\n            console.log('error', e);\n            throw new HttpException('Error creating product >' + e, 500);\n        }\n    }\n\n    @Delete(':id')\n    async delete(@Param('id') id: string): Promise<Product> {\n        await this.productService.delete(id);\n        return null;\n    }\n\n    @Patch(':id')\n    async update(@Param('id') id: string, @Body() product: Product): Promise<Product> {\n        return this.productService.update(id, product);\n    }\n\n\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Schema as MongooseSchema } from 'mongoose';\nimport { v4 as uuid } from 'uuid';\nimport isEmail from 'validator/lib/isEmail';\nimport {Category, Review, User} from \"@find-a-buddy/data\";\n// import { Meetup } from '../meetup/meetup.schema';\n\nexport type ProductDocument = Product & Document;\n\n@Schema()\nexport class Product {\n  @Prop({default: uuid, index: true})\n  id: string;\n\n  @Prop({\n    required: true,\n    unique: false,\n  })\n  name: string;\n\n  @Prop({\n    required: true,\n  })\n  description: string;\n\n  @Prop({\n    required: false,\n    default: 0,\n    validate: [rating => rating >= 0 && rating <= 10, 'Rating must be between 0 and 10'],\n  })\n  rating: number;\n\n\n  @Prop({\n    required: true,\n  })\n  price: number;\n\n  @Prop({\n    required: true,\n  })\n  quantity: number;\n\n  @Prop({\n    required: true,\n  })\n  author: string;\n\n  @Prop({\n    required: false,\n    default: 'https://static.vecteezy.com/system/resources/previews/002/425/076/non_2x/plant-leaves-in-a-pot-beautiful-green-houseplant-isolated-simple-trendy-flat-style-for-interior-garden-decoration-design-free-vector.jpg'\n  })\n  image: string;\n\n  @Prop({default: []})\n  reviews: Review[];\n\n  @Prop({\n    default: [],\n    required: true,\n  })\n  category: Category[];\n\n\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n","import {Injectable} from '@nestjs/common';\n\nimport {Model} from 'mongoose';\nimport {InjectModel} from '@nestjs/mongoose';\n\nimport {Product as ProductModel, ProductDocument} from './product.schema';\nimport {Category, Id, Product, Review} from '@find-a-buddy/data';\nimport {User, UserDocument} from \"../user/user.schema\";\n\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    @InjectModel(ProductModel.name) private productModel: Model<ProductDocument>,\n    @InjectModel(User.name) private userModel: Model<UserDocument>\n  ) {}\n\n  async getAll(): Promise<Product[]> {\n    return this.productModel.aggregate([\n        {\n            $lookup: {\n                from: 'products',\n                localField: 'products',\n                foreignField: 'id',\n                as: 'products',\n            }\n\n        },\n        {\n            $group: {\n                _id: '$_id',\n                id: {$first: '$id'},\n                author: {$first: '$author'},\n                name: {$first: '$name'},\n                description: {$first: '$description'},\n                image: {$first: '$image'},\n                rating: {$avg: '$reviews.rating'},\n                quantity: {$first: '$quantity'},\n                price: {$first: '$price'},\n                reviews: {$first: '$reviews'},\n                category: {$first: '$category'},\n            }\n        }\n\n    ]);\n  }\n\n  async delete(productId: string) {\n      console.log('productId', productId);\n    await this.productModel.deleteOne({ id: productId });\n  }\n\n\n\n  async getOne(productId: string): Promise<Product | null> {\n    const products = await this.productModel.aggregate([\n        {\n            $match: {\n                id: productId,\n            }\n        },\n        {\n            $group: {\n                _id: '$_id',\n                id: {$first: '$id'},\n                author: {$first: '$author'},\n                name: {$first: '$name'},\n                description: {$first: '$description'},\n                image: {$first: '$image'},\n                rating: {$first: '$rating'},\n                quantity: {$first: '$quantity'},\n                price: {$first: '$price'},\n                reviews: {$first: '$reviews'},\n                category: {$first: '$category'},\n            }\n        }\n    ]);\n    return products[0];\n  }\n\n  async create(product: Product, authorId: string): Promise<Product> {\n    const author = await this.userModel.findOne({ id: authorId });\n    if (!author) {\n        throw new Error('AuthorId not found');\n    }\n\n    console.log('author works', author);\n\n    const newProduct = new this.productModel({\n        id: product.id,\n        author: author.username,\n        name: product.name,\n        description: product.description,\n        image: product.image,\n        quantity: product.quantity,\n        price: product.price,\n        reviews: product.reviews,\n        category: product.category\n    });\n\n    author.products.push(newProduct);\n\n    await Promise.all([newProduct.save(), author.save()]);\n\n    return newProduct;\n  }\n\n    async update(productId: string , product: Product): Promise<Product> {\n        const updatedProduct = await this.productModel.findOneAndUpdate(\n            { id: productId },\n            {\n                ...product,\n            },\n            { new: true }\n        );\n\n        const updatedAuthor = await this.userModel.findOneAndUpdate(\n            { username: updatedProduct.author },\n            {\n                $set: {\n                    'products.$[elem].name': updatedProduct.name,\n                    'products.$[elem].description': updatedProduct.description,\n                    'products.$[elem].image': updatedProduct.image,\n                    'products.$[elem].quantity': updatedProduct.quantity,\n                    'products.$[elem].price': updatedProduct.price,\n                    'products.$[elem].category': updatedProduct.category,\n                }\n            },\n            {\n                arrayFilters: [\n                    { 'elem.id': productId }\n                ],\n                new: true\n            });\n    return updatedProduct;\n    }\n\n\n\n\n}\n","\nimport {Body, Controller, Delete, Get, HttpException, Param, Patch, Post, Put} from '@nestjs/common';\n\n\nimport {Product, Review, User} from '@find-a-buddy/data';\nimport { InjectToken, Token } from '../auth/token.decorator';\nimport {ReviewService} from \"./review.service\";\n\n@Controller('review')\nexport class ReviewController {\n    constructor(private readonly reviewService: ReviewService) {}\n\n    @Get()\n    async getAll(): Promise<Review[]> {\n        return this.reviewService.getAll();\n    }\n\n\n\n    @Get(':id')\n    async getOne(@Param('id') id: string): Promise<Review> {\n        return this.reviewService.getOne(id);\n    }\n\n\n    @Post(':id')\n    async create(@InjectToken() token: Token, @Param('id') productId: string ,  @Body() review: Review): Promise<Review> {\n        try {\n            console.log('productid:>>>' , productId)\n            return await this.reviewService.create(review , token, productId);\n        }\n        catch (e) {\n            console.log('error', e);\n            throw new HttpException('Error creating product >' + e, 500);\n        }\n    }\n\n    @Delete(':id')\n    async delete(@Param('id') id: string): Promise<void> {\n        return this.reviewService.delete(id);\n    }\n\n    @Patch(':id')\n    async update(@Param('id') id: string, @Body() review: Review): Promise<Review> {\n        console.log('adasdasd',review);\n        return this.reviewService.update(id, review);\n    }\n\n\n\n}","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Schema as MongooseSchema } from 'mongoose';\nimport { v4 as uuid } from 'uuid';\n\nexport type ReviewDocument = Review & Document;\n\n@Schema()\nexport class Review {\n\n  @Prop({default: uuid, index: true})\n  id: string;\n\n  @Prop({\n    required: true,\n    unique: false,\n  })\n  productId: string;\n\n  @Prop({\n    required: true,\n    unique: false,\n  })\n  authorId: string;\n\n  @Prop({\n    required: true,\n    unique: false,\n  })\n  author: string;\n\n  @Prop({\n    required: true,\n    unique: false,\n  })\n  description: string;\n\n  @Prop({\n    required: true,\n    unique: false,\n    validate: [rating => rating >= 0 && rating <= 10, 'Rating must be between 0 and 10'],\n  })\n  rating: number;\n\n}\n\nexport const ReviewSchema = SchemaFactory.createForClass(Review);\n","import {Injectable, NotFoundException} from '@nestjs/common';\n\nimport {Model} from 'mongoose';\nimport {InjectModel} from '@nestjs/mongoose';\n\nimport { ReviewDocument, Review as ReviewModel} from './review.schema';\nimport {Category, Id, Review} from '@find-a-buddy/data';\nimport {User, UserDocument} from \"../user/user.schema\";\nimport {Product, ProductDocument} from \"../product/product.schema\";\nimport {Token} from \"../auth/token.decorator\";\n\n\n@Injectable()\nexport class ReviewService {\n  constructor(\n    @InjectModel(ReviewModel.name) private reviewModel: Model<ReviewDocument>,\n    @InjectModel(User.name) private userModel: Model<UserDocument>,\n    @InjectModel(Product.name) private productModel: Model<ProductDocument>\n  ) {}\n\n  async getAll(): Promise<Review[]> {\n    return this.reviewModel.aggregate([\n        {\n            $lookup: {\n                from: 'reviews',\n                localField: 'reviews',\n                foreignField: 'id',\n                as: 'reviews',\n            }\n        },\n        {\n            $group: {\n                _id: '$_id',\n                id: {$first: '$id'},\n                productId: {$first: '$productId'},\n                author: {$first: '$author'},\n                description: {$first: '$description'},\n                rating: {$first: '$rating'},\n            }\n        }\n\n\n\n\n\n    ]);\n  }\n\n  async delete(id: string){\n      console.log(id)\n      await this.reviewModel.deleteOne({ id: id });\n      await this.userModel.updateMany({}, { $pull: { reviews: { id: id } } });\n      await this.productModel.updateMany({}, { $pull: { reviews: { id: id } } });\n\n  }\n\n\n\n  async getOne(productId: string): Promise<Review | null> {\n    const products = await this.reviewModel.aggregate([\n        {\n            $match: {\n                id: productId,\n            }\n        },\n        {\n            $group: {\n                _id: '$_id',\n                id: {$first: '$id'},\n                productId: {$first: '$productId'},\n                author: {$first: '$author'},\n                description: {$first: '$description'},\n                rating: {$first: '$rating'},\n            }\n        }\n    ]);\n    return products[0];\n  }\n\n  async create(review: Review, author: Token, productId: string): Promise<Review> {\n    console.log(review);\n      review.authorId = author.id;\n      review.author = author.username;\n      review.productId = productId;\n        const newReview = new this.reviewModel({\n            ...review,\n        });\n\n    const createdReview = await this.userModel.findOneAndUpdate({ id: author.id }, { $push: { reviews: newReview } });\n    const createdReview2 = await this.productModel.findOneAndUpdate({ id: productId }, { $push: { reviews: newReview } });\n\n    await Promise.all([createdReview.save(), createdReview2.save(), newReview.save()]);\n\n    return this.reviewModel.findOne({ id: review.id });\n  }\n\n    async update(id: string, review: Review): Promise<Review> {\n      const updatedReview = await this.reviewModel.findOneAndUpdate({\n            id: id,\n        }, {\n            ...review,\n        }, {\n            new: true,\n        });\n\n      const updatedReview2 = await this.userModel.findOneAndUpdate({\n            id: review.authorId,\n        }, {\n            $set: {\n                'reviews.$[elem].description': review.description,\n                'reviews.$[elem].rating': review.rating,\n            }\n        }, {\n            arrayFilters: [{\n                'elem.id': id,\n            }],\n            new: true,\n        });\n\n         const updatedReview3 = await this.productModel.findOneAndUpdate({\n            id: review.productId,\n        }, {\n            $set: {\n                'reviews.$[elem].description': review.description,\n                'reviews.$[elem].rating': review.rating,\n            }\n        }, {\n            arrayFilters: [{\n                'elem.id': id,\n            }],\n            new: true,\n        });\n\n        await Promise.all([updatedReview.save(), updatedReview2.save(), updatedReview3.save()]);\n\n        if (!updatedReview) {\n            throw new NotFoundException(`Review with id ${id} not found`);\n        }\n\n        return updatedReview;\n    }\n}\n","import {Body, Controller, Delete, Get, Param, Post} from '@nestjs/common';\n\nimport {UserService} from './user.service';\n\nimport {User, UserInfo} from '@find-a-buddy/data';\nimport {InjectToken, Token} from '../auth/token.decorator';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get()\n  async getAll(): Promise<UserInfo[]> {\n    return this.userService.getAll();\n  }\n\n  // this method should precede the general getOne method, otherwise it never matches\n  @Get('self')\n  async getSelf(@InjectToken() token: Token): Promise<User> {\n    console.log('token CurrentLogger:', token);\n    return await this.userService.getOne(token.id);\n  }\n\n  @Get(':id')\n  async getOne(@Param('id') id: string): Promise<User> {\n    return this.userService.getOne(id);\n  }\n\n\n\n\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Schema as MongooseSchema } from 'mongoose';\nimport { v4 as uuid } from 'uuid';\nimport isEmail from 'validator/lib/isEmail';\nimport {Product, Review} from \"@find-a-buddy/data\";\nimport {Order} from \"../order/order.schema\";\n\n// import { Meetup } from '../meetup/meetup.schema';\n\nexport type UserDocument = User & Document;\n\n@Schema()\nexport class User {\n  @Prop({default: uuid, index: true})\n  id: string;\n\n  @Prop({\n    required: true,\n    unique: true,\n  })\n  username: string;\n\n  @Prop({\n    default: 500,\n    unique: false,\n  })\n  wallet: number;\n\n  @Prop({default: []})\n  friends: User[];\n\n  @Prop({default: []})\n  products: Product[];\n\n  @Prop({default: []})\n  reviews: Review[];\n\n  @Prop({default: []})\n  orders: Order[];\n\n\n\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n","import { Injectable } from '@nestjs/common';\n\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\nimport { User as UserModel, UserDocument } from './user.schema';\n\nimport { User, UserInfo } from '@find-a-buddy/data';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(UserModel.name) private userModel: Model<UserDocument>,\n    // @InjectModel(Meetup.name) private meetupModel: Model<MeetupDocument>\n  ) {}\n\n  async getAll(): Promise<UserInfo[]> {\n    return this.userModel.aggregate([{\n      $lookup: {\n        from: 'meetups',\n        localField: 'meetups',\n        foreignField: '_id',\n        as: 'meetups',\n      }},\n        {$group: {\n            _id: '$_id',\n            id: {$first: '$id'},\n            username: {$first: '$username'},\n            wallet: {$first: '$wallet'},\n            products: {$push: '$products'},\n            reviews: {$push: '$reviews'},\n            friends: {$push: '$friends'}\n          },\n        }]);\n  }\n\n  async getOne(userId: string): Promise<User | null> {\n    console.log('model', this.userModel);\n    const users = await this.userModel.aggregate([{\n      $match: {\n          id: userId,\n        }},\n      {$group: {\n          _id: '$_id',\n          id: {$first: '$id'},\n          username: {$first: '$username'},\n          wallet: {$first: '$wallet'},\n          products: {$push: '$products'},\n          reviews: {$push: '$reviews'},\n          friends: {$push: '$friends'},\n              orders: {$push: '$orders'},\n        }\n      }]);\n    console.log('users', users);\n    return users[0];\n  }\n\n}\n","export * from './lib/id.type';\nexport * from './lib/category';\nexport * from './lib/product';\nexport * from './lib/review.interface';\nexport * from './lib/user.interface';\nexport * from './lib/api-response.interface';\nexport * from './lib/auth.interface';\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"bcrypt\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { ApiResponseInterceptor } from './app/api-response.interceptor';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.enableCors();\n  // const globalPrefix = 'data-api';\n  // app.setGlobalPrefix(globalPrefix);\n\n  app.useGlobalInterceptors(new ApiResponseInterceptor());\n\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  \n  Logger.log(\n    `🚀 Data API is running on: ${await app.getUrl()}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}